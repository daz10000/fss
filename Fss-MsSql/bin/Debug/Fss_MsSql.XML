<?xml version="1.0" encoding="utf-8"?>
<doc>
<assembly><name>fss_mssql</name></assembly>
<members>
<member name="M:Fss.Data.MsSql.DynamicMsSqlCommand.AddArrayParameters``1(System.Collections.Generic.IEnumerable{``0},System.String,Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.String})">
<summary>
 Adds an array of parameters in the SQL query. 
 The SQL query in the should contain a {paramNameRoot} element that will be expanded
 with as many parameters as there are elements in the input values collection. 
 For example, if there are three elements in values, the {paramNameRoot} element will be expanded
 to @paramNameRoot1, @paramNameRoot2, @paramNameRoot3 and each each of these parameter will be bound
 to a value from the input values list. 
 This is especially handy for IN statements:
    SELECT * FROM table WHERE name IN ({mynames})
 Use AddArrayParameters(myNames, &quot;mynames&quot;)  to bind the values in myNames to parameters in {mynames}
 Default start is 1 and default separator is &quot;, &quot;
</summary>
</member>
<member name="T:Fss.Data.MsSql">
<summary>
 Wrapper around MsSql database connection using dynamic operators, plus some other useful utils (e.g. ParameterArray). 
 Most of the code here comes from Thomas Petricek&apos;s original use of dynamic operator for SqlClient.
 See http://tomasp.net/blog/dynamic-sql.aspx/
</summary>
</member>
</members>
</doc>
